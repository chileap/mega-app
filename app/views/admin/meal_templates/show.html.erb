<%#
# Show

This view is the template for the show page.
It renders the attributes of a resource,
as well as a link to its edit page.

## Local variables:

- `page`:
  An instance of [Administrate::Page::Show][1].
  Contains methods for accessing the resource to be displayed on the page,
  as well as helpers for describing how each attribute of the resource
  should be displayed.

[1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Show
%>

<% content_for(:title) { t("administrate.actions.show_resource", name: page.page_title) } %>

<header class="flex items-center border-b border-gray-300 py-4 px-2">
  <div class="flex lg:hidden pr-6">
    <button data-action="slideover#_show" type="button" class="border-r border-gray-200 text-gray-500 focus:outline-none hover:bg-white hover:text-gray-700 lg:hidden">
      <span class="sr-only">Open sidebar</span>
      <!-- Heroicon name: outline/bars-3-bottom-left -->
      <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
        <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25H12" />
      </svg>
    </button>
  </div>

  <h1 class="main-content__page-title">
    <%= content_for(:title) %>
  </h1>

  <div>
    <%= link_to(
      t("administrate.actions.edit_resource", name: page.page_title),
      [:edit, namespace, page.resource],
      class: "button",
    ) if accessible_action?(page.resource, :edit) %>

    <%= link_to(
      t("administrate.actions.destroy"),
      [namespace, page.resource],
      class: "button button--danger",
      method: :delete,
      data: { confirm: t("administrate.actions.confirm") }
    ) if accessible_action?(page.resource, :destroy) %>
  </div>
</header>

<div class="h-full md:flex md:flex-1 sm:block md:items-stretch overflow-y-auto">
  <section class="main-content__body w-full">
    <div class="flex justify-end">
      <%= link_to(
        "New Ingredient",
        [:new, namespace, page.resource, :ingredient_template],
        class: "button mr-2",
      ) if accessible_action?(page.resource, :edit) %>

      <%= link_to(
        "New Instruction",
        [:new, namespace, page.resource, :instruction_template_step],
        class: "button",
      ) if accessible_action?(page.resource, :edit) %>
    </div>

    <dl>
      <% page.attributes.each do |attribute| %>
        <% if attribute.name == "ingredient_templates" || attribute.name == "instruction_template_steps" %>
          <dt class="attribute-label" id="<%= attribute.name %>">
          <%= t(
            "helpers.label.#{resource_name}.#{attribute.name}",
            default: page.resource.class.human_attribute_name(attribute.name),
          ) %>
          </dt>

          <dd class="attribute-data attribute-data--<%=attribute.html_class%>">
            <% field = attribute %>
            <% if field.resources.any? %>
              <% order = field.order_from_params(params.fetch(field.name, {})) %>
              <% page_number = params.fetch(field.name, {}).fetch(:page, nil) %>
              <%= render partial: "admin/#{attribute.name}/collection",
                locals: {
                  collection_presenter: field.associated_collection(order),
                  collection_field_name: field.name,
                  page: page,
                  resources: field.resources(page_number, order),
                  meal_template: page.resource,
                  table_title: field.name
                }
              %>
              <% if field.more_than_limit? %>
                <%= paginate field.resources(page_number), param_name: "#{field.name}[page]" %>
              <% end %>
            <% else %>
              <%= t("administrate.fields.has_many.none", default: "â€“") %>
            <% end %>
          </dd>
        <% else %>
          <dt class="attribute-label" id="<%= attribute.name %>">
          <%= t(
            "helpers.label.#{resource_name}.#{attribute.name}",
            default: page.resource.class.human_attribute_name(attribute.name),
          ) %>
          </dt>

          <dd class="attribute-data attribute-data--<%=attribute.html_class%>"
              ><%= render_field attribute, page: page %></dd>
        <% end %>
      <% end %>
    </dl>
  </section>
</div>